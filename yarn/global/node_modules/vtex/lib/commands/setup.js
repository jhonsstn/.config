"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const CustomCommand_1 = require("../api/oclif/CustomCommand");
const setup_1 = tslib_1.__importDefault(require("../modules/setup"));
class Setup extends CustomCommand_1.CustomCommand {
    async run() {
        const { flags } = this.parse(Setup);
        const ignoreLinked = flags['ignore-linked'];
        await setup_1.default({ ...flags, i: ignoreLinked });
    }
}
exports.default = Setup;
Setup.description = 'Sets up typings and tools for the current development environment.';
Setup.flags = {
    ...CustomCommand_1.CustomCommand.globalFlags,
    'ignore-linked': command_1.flags.boolean({
        char: 'i',
        description: 'Sets up types from published apps while ignoring types from linked apps.',
        default: false,
    }),
    all: command_1.flags.boolean({
        description: 'Sets up all available typings, configs, and tools.',
        default: false,
    }),
    typings: command_1.flags.boolean({
        description: 'Sets up GraphQL and React typings.',
        default: false,
    }),
    tooling: command_1.flags.boolean({
        description: 'Sets up Prettier, Husky, and ESLint.',
        default: false,
    }),
    tsconfig: command_1.flags.boolean({
        description: 'Sets up React and Node TSconfig, if applicable.',
        default: false,
    }),
};
Setup.args = [];
