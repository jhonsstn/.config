"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const vtex_1 = require("vtex");
class WorkspaceUse extends vtex_1.CustomCommand {
    async run() {
        const { args: { workspace }, flags: { production, reset }, } = this.parse(WorkspaceUse);
        await vtex_1.workspaceUse(workspace, { production, reset });
    }
}
exports.default = WorkspaceUse;
WorkspaceUse.description = `Creates and switches to a new ${vtex_1.ColorifyConstants.ID('workspace')} or simply switches to an existing one.`;
WorkspaceUse.examples = [
    `${vtex_1.ColorifyConstants.COMMAND_OR_VTEX_REF('vtex workspace use')} workspaceName`,
    `${vtex_1.ColorifyConstants.COMMAND_OR_VTEX_REF('vtex use')} workspaceName`,
];
WorkspaceUse.aliases = ['use'];
WorkspaceUse.flags = {
    ...vtex_1.CustomCommand.globalFlags,
    production: command_1.flags.boolean({
        char: 'p',
        description: `Creates and/or switches to a ${vtex_1.ColorifyConstants.ID('production workspace')}.`,
        default: false,
    }),
    reset: command_1.flags.boolean({
        char: 'r',
        description: `Resets the ${vtex_1.ColorifyConstants.ID('workspace')} before switching to it.`,
        default: false,
    }),
};
WorkspaceUse.args = [{ name: 'workspace', required: true, description: `Name of the ${vtex_1.ColorifyConstants.ID('workspace')}` }];
