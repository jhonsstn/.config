"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const cli_ux_1 = tslib_1.__importDefault(require("cli-ux"));
const vtex_1 = require("vtex");
const plugins_1 = tslib_1.__importDefault(require("../../modules/plugins"));
class PluginsLink extends command_1.Command {
    constructor() {
        super(...arguments);
        this.plugins = new plugins_1.default(this.config);
    }
    async run() {
        const { flags, args } = this.parse(PluginsLink);
        this.plugins.verbose = flags.verbose;
        cli_ux_1.default.action.start(`Linking plugin ${chalk_1.default.cyan(args.path)}`);
        await this.plugins.link(args.path);
        cli_ux_1.default.action.stop();
    }
}
exports.default = PluginsLink;
PluginsLink.description = "Links a plugin into the CLI for development.";
PluginsLink.usage = "plugins link PLUGIN";
PluginsLink.examples = [
    `${vtex_1.ColorifyConstants.COMMAND_OR_VTEX_REF("vtex plugins link")} myplugin`,
];
PluginsLink.args = [
    { name: "path", description: "Plugin path.", required: true, default: "." },
];
PluginsLink.flags = {
    help: command_1.flags.help({ char: "h" }),
    verbose: command_1.flags.boolean({ char: "v" }),
};
