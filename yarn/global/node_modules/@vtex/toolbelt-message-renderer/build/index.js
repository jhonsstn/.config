"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const boxen_1 = __importDefault(require("boxen"));
const chalk_1 = __importDefault(require("chalk"));
const emojic_1 = __importDefault(require("emojic"));
const mustache_1 = __importDefault(require("mustache"));
class TemplateRenderer {
    constructor(mustacheView) {
        this.mustacheView = mustacheView;
    }
    static getDefaultMustacheView() {
        const view = { emoji: emojic_1.default };
        return view;
    }
    static getSingleton() {
        if (this.renderer) {
            return this.renderer;
        }
        this.renderer = new TemplateRenderer(this.getDefaultMustacheView());
        return this.renderer;
    }
    renderNode(node) {
        switch (node.type) {
            case 'box':
                return this.renderBox(node);
            case 'text':
                return this.renderText(node.content);
            default:
                throw new Error(`Unknown NodeToRender type: ${node.type}`);
        }
    }
    renderBox({ boxConfig, content }) {
        return boxen_1.default(this.renderText(content), boxConfig);
    }
    renderText(str) {
        const mustacheRendered = this.renderMustacheTags(str);
        return this.renderColors(mustacheRendered);
    }
    renderColors(str) {
        const array = [str];
        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore
        // @ts-ignore
        array.raw = [str.replace(/\\/g, '\\\\')];
        return chalk_1.default(array);
    }
    renderMustacheTags(str) {
        return mustache_1.default.render(str, this.mustacheView);
    }
}
exports.TemplateRenderer = TemplateRenderer;
